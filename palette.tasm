# palette -- draw a palette in the 3tpp rgb framebuffer

gotodata;>start

# 114x81
null;0000+++-0;fbx
null;0000+0000;fby

null;;pixx
null;;pixy
null;;pixval
null;;pixtmp


null;;start


### draw pixel

## compute x,y to linear pixel number - 1, and store in in pixtmp.
# 1 is subtracted because word address must be 0-based
# but last trit must be neg-based to fit 3 positions in 1 trit.
romread1;>pixy
romread2;>fbx
multiply
romread2;>pixx
add
setreg2;00000000+
subtract
setdata;>pixtmp

## convert to word address and store in mempoint.
# 3 extra lines because divide rounds wrong for this purpose.
offsetlen;on,1,8
romread1;>pixtmp
offsetlen;off,0,9
setreg2;0000000+0
divide
setreg2;>dispbase
add
ptset

# get the last trit of the lpn and translate it to offset:
# '-' to 0 to '--'
# '0' to 3 to '0-'
# '+' to 6 to '+-'
# oh right! multiply by +0 and add -; simple!
# or multiply by +000 and add -00 to save a multiply.
# add -+- to set C to 3 at the same time.

# offsetlen computation...
# pixtmp contains lpn-1
offsetlen;on,0,1
romread1;>pixtmp
offsetlen;off,0,9
setreg2;00000+000
multiply
setreg2;000000-+-
add
setdata;>pixoff
...
offsetlen;000000000;pixoff
...
offsetlen;off,0,9
