inter-trom communication using the scratch memory.
this all supposes that is possible.

this is getting ahead of myself.
i should implement string routines first.

basic layout:
	1	command
	1	identifier (fid, channel id, etc.)
	1	aux
	1	datalength
	rem	data


@@@@@@@@@@@@@@@@@@@@@@@@@
@ COMMON COMMANDS

each has a corresponding response 'command'.

perhaps the low trit of the command word should be
+ for the command, 0 for successful response, or - for error.
or, - for the command (it's a demand), + for success, or 0 for error.

~ short list
~~~~~~~~~~~~~~~~~~~~~~
read
write
open
	to set up an id for read and write.
	cid = channel identifier.
close
	to free a cid.
indentify
	identify the trom.
	perhaps every rpc-enabled trom should implement this.
	it should return some of its capabilities, 
	like whether it can provide stdio or store data.

some of these will vary more than others.
read and write should be fairly consistent, 
but open might want a block number in aux
or the name of a file. maybe a special file 
should cover the whole 'disk', or a special 
identifier or aux word.

what about metadata and directory indexing?
i like normal read with a consistent format.


@@@@@@@@@@@@@@@@@@@@@@@@@
@ STANDARD CHANNELS

standard input output and error, 
so that one trom can provide these for others.

read and write commands with identifiers...
	-	error
	0	output
	+	input


@@@@@@@@@@@@@@@@@@@@@@@@@
@ DISK TROMS

see disk.txt
